name: Deploy Django project

on:
  push:
    branches:
      - main

jobs:
  envs:
    runs-on: ubuntu-latest
    container:
      image: python:3.11
      volumes:
        - envs-volume:/shared
    steps:
      - name: Check current directory
        run: pwd
    
      - name: Create shared directory
        run: mkdir -p shared

      - name: Create .env file
        run: |
          echo "SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> /shared/.env
          echo "EMAIL_HOST_USER=${{ secrets.WATOON_EMAIL_HOST_USER }}" >> /shared/.env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.WATOON_EMAIL_HOST_PASSWORD }}" >> /shared/.env

      - name: Use .env in envs
        run: echo "Using .env in envs"

  ci:
    name: 'Django CI'
    needs: envs
    runs-on: ubuntu-latest
    container:
      image: python:3.11
      volumes:
        - envs-volume:/shared
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
      - name: Use .env??
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of /shared directory:"
          ls -la /shared
          cat /shared/.env
          echo "Using .env in envs"
          
      - name: Check current directory
        run: pwd    
      - name: Use .env in ci
        run: |
          cat /shared/.env
          echo "Using .env in ci"

      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          python manage.py test
    
  build:
    needs: ci
    runs-on: ubuntu-latest
    container:
      image: python:3.11
      volumes:
        - envs-volume:/shared    
    steps:
      - name: Use .env in build
        run: |
          cat /shared/.env
          echo "Using .env in build"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v3.1.3
        with:
          python-version: "3.11"

      - name: Install dependencies & migration
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-venv zip
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          
          pip install -r requirements.txt
          python -m pip uninstall mysqlclient
          
          python manage.py migrate
          #없어도 돌아가는 듯?

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }} #나중에 실제로 배포할 사람의 키로 변경해야 함
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: test  # EB 애플리케이션명
          environment_name: deploy2-env  # EB 환경명
          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
          region: ap-northeast-2
          deployment_package: deploy.zip

